/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spacemathgame;

import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author butkowb
 */
public class signUp extends javax.swing.JFrame {

    /**
     * Creates new form signUp
     */
    public signUp() {
        initComponents();

        ErrorDisplay.setEditable(false);
        ErrorDisplay.setText("  Usernames must have more than 4 but less than 21 characters, and no spaces are allowed\n\n  Please make sure that your password has:\n  Eight or more characters, at least one number and at least one special character\n\n  The character '#' is not allowed to be used in usernames or passwords");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        errorDisplay = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        signupword = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        username1 = new javax.swing.JLabel();
        username2 = new javax.swing.JLabel();
        username3 = new javax.swing.JLabel();
        username4 = new javax.swing.JLabel();
        newName = new javax.swing.JTextField();
        newSurname = new javax.swing.JTextField();
        newUsername = new javax.swing.JTextField();
        newAccount = new javax.swing.JToggleButton();
        newPassword = new javax.swing.JPasswordField();
        confirmPassword = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        newEmail = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ErrorDisplay = new javax.swing.JTextArea();
        backBTN = new javax.swing.JToggleButton();

        errorDisplay.setColumns(20);
        errorDisplay.setRows(5);
        jScrollPane1.setViewportView(errorDisplay);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        signupword.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        signupword.setText("           SIGN UP TO PLAY");
        signupword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                signupwordKeyPressed(evt);
            }
        });

        username.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username.setText("Name:");

        username1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username1.setText("Surname:");

        username2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username2.setText("Password:");

        username3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username3.setText("Username:");

        username4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username4.setText("Confirm Password:");

        newAccount.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        newAccount.setText("Create New Account");
        newAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAccountActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Email Address:");

        ErrorDisplay.setColumns(20);
        ErrorDisplay.setRows(5);
        jScrollPane2.setViewportView(ErrorDisplay);

        backBTN.setText("Go Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(newAccount))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(signupword, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(backBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(username, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(username2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(username3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(username4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(username1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(105, 105, 105)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newSurname, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(newName)
                                    .addComponent(newUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(newPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(confirmPassword)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(newEmail)))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(signupword, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username)
                    .addComponent(newName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username2)
                    .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username4)
                    .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(newEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void signupwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_signupwordKeyPressed

    }//GEN-LAST:event_signupwordKeyPressed

    private void newAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAccountActionPerformed

        String name = newName.getText();
        String surname = newSurname.getText();
        String username = newUsername.getText();
        String password = newPassword.getText();
        String confirmSPassword = confirmPassword.getText();
        String email = newEmail.getText().toLowerCase();
        int gold =1500;

        // TODO: allow users to change details like username and email address
        boolean numCheck = false;
        boolean specialCheck = false;
        for (int a = 0; a < password.length(); a++) {

            if (Character.isDigit(password.charAt(a))) {
                numCheck = true;
            } else if (!Character.isLetterOrDigit(password.charAt(a))) {
                specialCheck = true;
            }

        }

        boolean numCheckName = false;
        for (int a = 0; a < name.length(); a++) {
            if (Character.isDigit(name.charAt(a))) {
                numCheckName = true;
            }
        }
        boolean numCheckSurname = false;
        for (int a = 0; a < surname.length(); a++) {
            if (Character.isDigit(surname.charAt(a))) {
                numCheckSurname = true;
            }
        }

        //BASIC NAME AND SURNAME CHECK
        if (name.length() < 2) {

            ErrorDisplay.setText("  Make sure that to enter your name");
        } else if (numCheckName) {

            ErrorDisplay.setText("  Names don't have numbers in them");
        } else if (surname.length() < 2) {

            ErrorDisplay.setText("  Make sure to enter your surname");
        } else if (numCheckSurname) {

            ErrorDisplay.setText("  Surnames don't have numbers in them");
        } // USERNAME CHECK
        else if (username.length() < 5) {

            ErrorDisplay.setText("  Make sure that your username has 5 or more digits");
        }  else if (username.length() > 20) {

            ErrorDisplay.setText("  Make sure that your username has 20 or less digits");
        } 
        
        
        else if (username.contains("#")) {

            ErrorDisplay.setText("  Make sure that your username does not have the character '#'");
        } else if (username.contains(" ")) {

            ErrorDisplay.setText("  Make sure that your username does not have a space");
        } // PASSWORD CHECK
        else if (password.contains("#")) {

            ErrorDisplay.setText("  Make sure that your password does not have the character '#'");
        } else if (password.length() < 8) {

            ErrorDisplay.setText("  Make sure that your password has eight or more characters");
        } else if (!numCheck) {

            ErrorDisplay.setText("  Make sure that your password at least one number");
        } else if (!specialCheck) {

            ErrorDisplay.setText("  Make sure that your password has at least one special character");

        } else if (!(password.equals(confirmSPassword))) {

            ErrorDisplay.setText("  Make sure that both passwords entered are the same");
        } //Email check
        else if (!email.contains("@")) {

            ErrorDisplay.setText("  Make sure to input your correct email, all emails contain '@'");
        } else if (!email.contains(".")) {

            ErrorDisplay.setText("  Make sure to input your correct email, all emails contain a full stop");
        } else {

            ErrorDisplay.setText("");

            Users[] all = new Users[1000];
            int helper = 0;

            Users test = new Users(name, surname, username, password, email,gold);
            Scanner userCheck1;
            try {
                userCheck1 = new Scanner(new File("storeUsers.txt")).useDelimiter("#");

                while (userCheck1.hasNextLine()) {
                    Scanner userCheck = new Scanner(userCheck1.nextLine()).useDelimiter("#");
                    name = userCheck.next();
                    surname = userCheck.next();
                    username = userCheck.next();
                    password = userCheck.next();
                    email = userCheck.next();
                    all[helper] = new Users(name, surname, username, password, email,gold);
                    helper++;
                    userCheck.close();
                }
                userCheck1.close();
                boolean usernameUsed = false;
                for (int a = 0; a < helper; a++) {
                    if (all[a].getUsername().equalsIgnoreCase(test.getUsername())) {
                        usernameUsed = true;
                    }
                }

                if (!usernameUsed) {
                    //write the new person
                    

                        PrintWriter file;
                    try {
                        file = new PrintWriter(new FileWriter("storeUsers.txt", true), true);

                        PrintWriter file2 = new PrintWriter(new FileWriter("difficulty.txt", true), true);
                        file2.println(test.getUsername()+"#0&0&0#0&0&N&N");
                        file.println(test.toString());
                        file.close();
                        signIn help = new signIn();
                        help.setResizable(false);
                        help.setVisible(true);                                             
                        dispose();

                    } catch (IOException ex) {
                        Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {

                    ErrorDisplay.setText("  I'm sorry, that username is already in use");
                }

            } catch (FileNotFoundException ex) {

                        Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_newAccountActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        signIn help = new signIn();
        help.setResizable(false);
        help.setVisible(true);                                             
    dispose();
    }//GEN-LAST:event_backBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new signUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ErrorDisplay;
    private javax.swing.JToggleButton backBTN;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JTextArea errorDisplay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToggleButton newAccount;
    private javax.swing.JTextField newEmail;
    private javax.swing.JTextField newName;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JTextField newSurname;
    private javax.swing.JTextField newUsername;
    private javax.swing.JLabel signupword;
    private javax.swing.JLabel username;
    private javax.swing.JLabel username1;
    private javax.swing.JLabel username2;
    private javax.swing.JLabel username3;
    private javax.swing.JLabel username4;
    // End of variables declaration//GEN-END:variables
}
