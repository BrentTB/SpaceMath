/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spacemathgame;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author butkowb
 */
public class Instructions extends javax.swing.JFrame {
public static int gold=0;
public static int newLives=0;
public static int newRemoveAnswers=0;
public static int helper=0;
public static int userNum;
public static char rareBackground='N';
public static char legendaryBackground='N';

    public static Users[] all = new Users[1000];
    public static Difficulty[] all2 = new Difficulty[1000];
    public Instructions() throws IOException {
        initComponents();
        instructionPane.setEditable(false);
        showLeaderboard.setEditable(false);
        CreditShow.setEditable(false);
        SettingsErrors.setEditable(false);
        goldErrorBox.setEditable(false);
        
        showLeaderboard();
        
        
        
        
        
        Scanner userCheck1;
        
            userCheck1 = new Scanner(new File("storeUsers.txt")).useDelimiter("#");
            helper = 0;
            while (userCheck1.hasNextLine()) {
                Scanner userCheck = new Scanner(userCheck1.nextLine()).useDelimiter("#");
                String name1 = userCheck.next();
                String surname1 = userCheck.next();
                String username1 = userCheck.next();
                String password1 = userCheck.next();
                String email1 = userCheck.next();
                int goldAmount1 = userCheck.nextInt();
                all[helper] = new Users(name1, surname1, username1, password1, email1, goldAmount1);
                helper++;
                userCheck.close();
            }
            userCheck1.close();
        
        gold=all[0].getGold();
        
            Scanner userCheck3 = new Scanner(new File("difficulty.txt")).useDelimiter("#");
            helper = 0;
            while (userCheck3.hasNextLine()) {
                Scanner userCheck2 = new Scanner(userCheck3.nextLine()).useDelimiter("#");
                String username2 = userCheck2.next();
                String difficulty = userCheck2.next();
                String extras = userCheck2.next();
                all2[helper] = new Difficulty(username2, difficulty, extras);
                helper++;
                userCheck2.close();
            }
            userCheck3.close();
        
        
            
            for (int i = 0; i < helper; i++) {
                if (all[0].getUsername().equalsIgnoreCase(all2[i].getUsername())) {
                    userNum = i;
                    i = helper;
                }
            }
            Scanner extraGetter = new Scanner(all2[userNum].getExtras()).useDelimiter("&");
            newRemoveAnswers = extraGetter.nextInt();
            newLives = extraGetter.nextInt();
            rareBackground = extraGetter.next().charAt(0);
            legendaryBackground = extraGetter.next().charAt(0);
            extraGetter.close();
            
            goldDisplay.setText("You have "+gold+" gold");
            livesDisplay.setText("You have "+newLives+" extra lives");
            answersDisplay.setText("You have "+newRemoveAnswers+" remove answers");
            if(legendaryBackground=='Y'){
            
        legendDisplay.setText("You own the legendary background");
            }else{
        legendDisplay.setText("You do not own the legendary background");
    }
            if(rareBackground=='Y'){
            
        rareDisplay.setText("You own the rare background");
            }else{
        rareDisplay.setText("You do not own the rare background");
    }}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        BackBtn0 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        instructionPane = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        BackBtn1 = new javax.swing.JButton();
        buyLife = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        buyRare = new javax.swing.JButton();
        buyLegendary = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        buyAnswer = new javax.swing.JButton();
        goldErrorBox = new javax.swing.JTextField();
        goldDisplay = new javax.swing.JLabel();
        livesDisplay = new javax.swing.JLabel();
        answersDisplay = new javax.swing.JLabel();
        rareDisplay = new javax.swing.JLabel();
        legendDisplay = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        BackBtn2 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        showLeaderboard = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        BackBtn4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CreditShow = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        BackBtn3 = new javax.swing.JButton();
        newPassword = new javax.swing.JPasswordField();
        confirmPassword = new javax.swing.JPasswordField();
        username = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        username1 = new javax.swing.JLabel();
        newEmail = new javax.swing.JTextField();
        username2 = new javax.swing.JLabel();
        username4 = new javax.swing.JLabel();
        newName = new javax.swing.JTextField();
        newSurname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        changeValues = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        SettingsErrors = new javax.swing.JTextArea();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jToggleButton1.setText("jToggleButton1");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackBtn0.setText("BACK");
        BackBtn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn0ActionPerformed(evt);
            }
        });

        instructionPane.setColumns(20);
        instructionPane.setRows(5);
        instructionPane.setText("Welcome to Space Math!\n\nThe aim of this game is to answer math questions before your time\nruns out. You start each game with 100 health and lose 10 health\neach time you answer a question wrong or too slowly. The time \nstarts when you press the 'Start Game' button after entering the \ngame.\n\nThere are three difficulties of questions that go from simple \naddition questions to hard exponential questions and all questions\nare randomly generated. Harder types of questions will award you \nmore points as well as more gold. \n\nGold can be used in the shop to purchase cosmetics such as the background\nof your game or functional boosts, such as the ability to \ncarry on when you lose all your health or to remove an incorrect \nanswer on one round.\n\nThe leaderboard tab will show the username and scores of the top\n50 attempts made at this game so far as well as how many boosts \nwere used.\n\nThe credits tab will tell you about the creation of this game,\nthe creator and all help given.\n\nThe settings tab allows you to change any information that may have\nbeen entered incorrectly or may have changed since the sign up of\nyour username. Please take note that at this time you are not able\nto change your username!\n\n'+' refers to addition\n'-' refers to subtraction\n'X' refers to multiplication\n'/' refers to division\n'5^2' means 5 to the power of 2");
        jScrollPane3.setViewportView(instructionPane);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 588, Short.MAX_VALUE)
                .addComponent(BackBtn0))
            .addComponent(jScrollPane3)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BackBtn0))
        );

        jTabbedPane1.addTab("Instructions", jPanel1);

        BackBtn1.setText("BACK");
        BackBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn1ActionPerformed(evt);
            }
        });

        buyLife.setText("Buy an extra life - 50");
        buyLife.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyLifeActionPerformed(evt);
            }
        });

        jLabel3.setText("Use your coins for upgrades and extra lives here");

        buyRare.setText("Buy access to rare background - 100");
        buyRare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyRareActionPerformed(evt);
            }
        });

        buyLegendary.setText("Buy access to legendary background - 1000");
        buyLegendary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyLegendaryActionPerformed(evt);
            }
        });

        jLabel4.setText("COSMETICS");

        jLabel5.setText("BOOSTS");

        buyAnswer.setText("Buy a remove an answer - 10");
        buyAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyAnswerActionPerformed(evt);
            }
        });

        goldErrorBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goldErrorBoxActionPerformed(evt);
            }
        });

        goldDisplay.setText("you have X gold");

        livesDisplay.setText("you have X Extra Lives");

        answersDisplay.setText("you have X gold");

        rareDisplay.setText("you have X gold");

        legendDisplay.setText("you have X gold");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BackBtn1))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(122, 122, 122))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buyLife, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buyAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buyLegendary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buyRare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(livesDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                            .addComponent(goldDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(answersDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rareDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(legendDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(goldErrorBox, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyLife)
                    .addComponent(buyRare))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyLegendary)
                    .addComponent(buyAnswer))
                .addGap(18, 18, 18)
                .addComponent(goldErrorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(goldDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(livesDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(answersDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rareDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(legendDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(BackBtn1))
        );

        jTabbedPane1.addTab("Shop", jPanel3);

        BackBtn2.setText("BACK");
        BackBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn2ActionPerformed(evt);
            }
        });

        showLeaderboard.setColumns(20);
        showLeaderboard.setRows(5);
        showLeaderboard.setText("1. BattleGlory - 152 points\n2. JMan - 112 points\n3. BattleGlory - 56 points");
        jScrollPane5.setViewportView(showLeaderboard);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 588, Short.MAX_VALUE)
                .addComponent(BackBtn2))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BackBtn2))
        );

        jTabbedPane1.addTab("Leaderboard", jPanel5);

        BackBtn4.setText("BACK");
        BackBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn4ActionPerformed(evt);
            }
        });

        CreditShow.setColumns(20);
        CreditShow.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        CreditShow.setRows(5);
        CreditShow.setText("This game was designed and created by Brent\nButkow for his 2019 Information Technology PAT\nproject. Credit goes to Jonah Kollenberg,\nJonathan Utian, Michael Kaplan and Stackoverflow.");
        jScrollPane1.setViewportView(CreditShow);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 588, Short.MAX_VALUE)
                .addComponent(BackBtn4))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 352, Short.MAX_VALUE)
                .addComponent(BackBtn4))
        );

        jTabbedPane1.addTab("Credits", jPanel2);

        BackBtn3.setText("BACK");
        BackBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn3ActionPerformed(evt);
            }
        });

        username.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username.setText("New Name:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("New Email Address:");

        username1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username1.setText("New Surname:");

        username2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username2.setText("New Password:");

        username4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        username4.setText("Confirm Password:");

        jLabel2.setText("Did you enter incorrect data or want to change your password? Do so below!");

        changeValues.setText("Confirm Changes");
        changeValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeValuesActionPerformed(evt);
            }
        });

        SettingsErrors.setColumns(20);
        SettingsErrors.setRows(5);
        SettingsErrors.setText("Only Enter the fields above that you\nwant to change. The same naming rules\napply from when creating an account");
        jScrollPane6.setViewportView(SettingsErrors);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 588, Short.MAX_VALUE)
                .addComponent(BackBtn3))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(username)
                                .addGap(150, 150, 150)
                                .addComponent(newName))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(username1)
                                .addGap(130, 130, 130)
                                .addComponent(newSurname))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(username2)
                                .addGap(127, 127, 127)
                                .addComponent(newPassword))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(changeValues))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(username4)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(55, 55, 55)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newEmail)
                                    .addComponent(confirmPassword))))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(username)
                    .addComponent(newName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(username1)
                    .addComponent(newSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(username2)
                    .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(username4)
                    .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(changeValues)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                                .addComponent(BackBtn3))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane6)
                                .addContainerGap())))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(newEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );

        jTabbedPane1.addTab("Settings", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void showLeaderboard() throws IOException {
        String leaderboard = "";
        Leaderboard[] all = new Leaderboard[1000];
        Scanner userCheck1 = new Scanner(new File("leaderboard.txt")).useDelimiter("#");
        int helper = 0;
        while (userCheck1.hasNextLine()) {
            Scanner userCheck = new Scanner(userCheck1.nextLine()).useDelimiter("#");
            String username = userCheck.next();
            int score = userCheck.nextInt();
            int extraLives = userCheck.nextInt();
            int removeAnswer = userCheck.nextInt();
            all[helper] = new Leaderboard(username, score, extraLives, removeAnswer);
            helper++;
            userCheck.close();
        }
        userCheck1.close();
        Leaderboard temp;
        for (int a = 0; a < helper; a++) {
            for (int b = 0; b < helper-1; b++) {
                if(all[a].getScore()>all[b].getScore()){
                    temp=all[a];
                    all[a] = all[b];
                    all[b] = temp;
                }
                
            }
        }

        int extras = helper;
        if (extras > 50) {
            extras = 50;
        }
        if (helper > 50) {

                    PrintWriter file = new PrintWriter(new FileWriter("leaderboard.txt"));
            for (int a = 0; a < extras; a++) {
                file.println(all[a].ForTextFile());
            }
file.close();
        }
        for (int i = 0; i < extras; i++) {
            leaderboard += ""+(i+1)+") "+all[i].toString()+"\n";
            
        }
        showLeaderboard.setText(leaderboard);
    }

    private void goBack() throws IOException {
        String help=newRemoveAnswers+"&"+newLives+"&"+rareBackground+"&"+legendaryBackground;
        
        all[0].setGold(gold);
        all2[userNum].setExtras(help);
        
        
                    PrintWriter file;
           
                file = new PrintWriter(new FileWriter("storeUsers.txt",false),true);
                    for (int z = 0; z < helper; z++) {
                        file.println(all[z].toString());
           
                    }
        
                    PrintWriter file2;
           
                file2 = new PrintWriter(new FileWriter("difficulty.txt",false),true);
                    for (int z = 0; z < helper; z++) {
                        file2.println(all2[z].toString());
           
                    }
        
        
        
        dispose();
        MainMenu helper = new MainMenu();
        helper.setResizable(false);
        helper.setVisible(true);
    }
    private void BackBtn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn0ActionPerformed
    try {
        goBack();
    } catch (IOException ex) {
        Logger.getLogger(Instructions.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_BackBtn0ActionPerformed

    private void BackBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn1ActionPerformed
    try {
        goBack();
    } catch (IOException ex) {
        Logger.getLogger(Instructions.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_BackBtn1ActionPerformed

    private void BackBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn2ActionPerformed
    try {
        goBack();
    } catch (IOException ex) {
        Logger.getLogger(Instructions.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_BackBtn2ActionPerformed

    private void BackBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn3ActionPerformed
    try {
        goBack();
    } catch (IOException ex) {
        Logger.getLogger(Instructions.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_BackBtn3ActionPerformed

    private void BackBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn4ActionPerformed
    try {
        goBack();
    } catch (IOException ex) {
        Logger.getLogger(Instructions.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_BackBtn4ActionPerformed

    private void buyLifeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyLifeActionPerformed

if(gold>=50){
    gold=gold-50;
    newLives++;
    goldErrorBox.setText("You just bought an extra life");
            goldDisplay.setText("You have "+gold+" gold");
            livesDisplay.setText("You have "+newLives+" extra lives");
}else{
    goldErrorBox.setText("You do not have enough gold");
}
    }//GEN-LAST:event_buyLifeActionPerformed

    private void changeValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeValuesActionPerformed
       
        
        
        
        
        String name = newName.getText();
        String surname = newSurname.getText();
        String password = newPassword.getText();
        String confirmPassword1 = confirmPassword.getText();
        String email = newEmail.getText().toLowerCase();

        boolean numCheck = false;
        boolean specialCheck = false;
      boolean wrong=false;
      
      if(name.equals(surname) && surname.equals(password) && password.equals(confirmPassword1)&& confirmPassword1.equals(email)&&"".equals(email)){
          
            SettingsErrors.setText("  You have not selected to change anything");
      
         wrong=true;
      }
      
      
        if(!password.equals("") || !confirmPassword1.equals("")){      
        for (int a = 0; a < password.length(); a++) {//password

            if (Character.isDigit(password.charAt(a))) {
                numCheck = true;
            } else if (!Character.isLetterOrDigit(password.charAt(a))) {
                specialCheck = true;
            }

        } if (password.contains("#")) {
         wrong=true;

            SettingsErrors.setText("  Make sure that your password does not have the character '#'");
        } else if (password.length() < 8) {
         wrong=true;

            SettingsErrors.setText("  Make sure that your password has eight or more characters");
        } else if (!numCheck) {
         wrong=true;

            SettingsErrors.setText("  Make sure that your password at least one number");
        } else if (!specialCheck) {
         wrong=true;

            SettingsErrors.setText("  Make sure that your password has at least one special character");

        } else if (!(password.equals(confirmPassword1))) {
         wrong=true;

            SettingsErrors.setText("  Make sure that both passwords entered are the same");
        } 
        
        
        }
        
        
        
        if(!name.equals("")){        //name
        boolean numCheckName = false;
        for (int a = 0; a < name.length(); a++) {
            if (Character.isDigit(name.charAt(a))) {
                numCheckName = true;
            }
        }
         if (name.length() < 2) {
         wrong=true;
            SettingsErrors.setText("  Make sure that to enter your name");
        } else if (numCheckName) {

         wrong=true;
            SettingsErrors.setText("  Names don't have numbers in them");
        }
         
         
        }
        
        
        
        
        
        
        
        
        
        if(!surname.equals("")){    //surname
        boolean numCheckSurname = false;
        for (int a = 0; a < surname.length(); a++) {
            if (Character.isDigit(surname.charAt(a))) {
                numCheckSurname = true;
            }
        }
         if (surname.length() < 2) {

         wrong=true;
            SettingsErrors.setText("  Make sure to enter your surname");
        } else if (numCheckSurname) {

         wrong=true;
            SettingsErrors.setText("  Surnames don't have numbers in them");
        }
        
        
        }

        //BASIC NAME AND SURNAME CHECK
        
        //Email check
        if(!email.equals("")){ 
         if (!email.contains("@")) {

         wrong=true;
            SettingsErrors.setText("  Make sure to input your correct email, all emails contain '@'");
        } else if (!email.contains(".")) {

         wrong=true;
            SettingsErrors.setText("  Make sure to input your correct email, all emails contain a full stop");
        } }
        
            if(wrong == false){
            SettingsErrors.setText("SUCCESS. Your details have been updated");
       
        
            try{
            
            
            
            
            
            
            
        if(!name.equals("")){ 
        all[0].setName(name);
        }
        
        if(!password.equals("")){ 
        all[0].setPassword(password);
        
        }
        if(!surname.equals("")){ 
        
        all[0].setSurname(surname);
        
        }
        if(!email.equals("")){ 
        
        all[0].setEmail(email);
        
        }
        
        
                    PrintWriter file;
           
                file = new PrintWriter(new FileWriter("storeUsers.txt",false),true);
                    for (int z = 0; z < helper; z++) {
                        file.println(all[z].toString());
           
                    }
            
            
            
            
            
            
            
            }  catch (IOException ex) {
                Logger.getLogger(Instructions.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        

                    
            }
        
                   
    }//GEN-LAST:event_changeValuesActionPerformed

    private void goldErrorBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goldErrorBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_goldErrorBoxActionPerformed

    private void buyAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyAnswerActionPerformed
    
if(gold>=10){
    gold=gold-10;
    newRemoveAnswers++;
    goldErrorBox.setText("You just bought a remove answer");
            goldDisplay.setText("You have "+gold+" gold");
            answersDisplay.setText("You have "+newRemoveAnswers+" remove answers");
}else{
    goldErrorBox.setText("You do not have enough gold");
}
    }//GEN-LAST:event_buyAnswerActionPerformed

    private void buyRareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyRareActionPerformed
        
        if(rareBackground=='Y'){
            goldErrorBox.setText("You already own the rare background");
        }else if(gold<100){
            
    goldErrorBox.setText("You do not have enough gold");
        }else{
            
            rareBackground='Y';
    goldErrorBox.setText("You just bought access to the rare background");
            gold=gold-100;
            goldDisplay.setText("You have "+gold+" gold");
        rareDisplay.setText("You own the rare background");
        }
    }//GEN-LAST:event_buyRareActionPerformed

    private void buyLegendaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyLegendaryActionPerformed
        
        if(legendaryBackground=='Y'){
            goldErrorBox.setText("You already own the Legendary background");
        }else if(gold<1000){
            
    goldErrorBox.setText("You do not have enough gold");
        }else{
            
        legendDisplay.setText("You own the legendary background");
            legendaryBackground='Y';
    goldErrorBox.setText("You just bought access to Legendary background");
            gold=gold-1000;
            goldDisplay.setText("You have "+gold+" gold");
        }
    }//GEN-LAST:event_buyLegendaryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Instructions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Instructions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Instructions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Instructions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Instructions().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Instructions.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn0;
    private javax.swing.JButton BackBtn1;
    private javax.swing.JButton BackBtn2;
    private javax.swing.JButton BackBtn3;
    private javax.swing.JButton BackBtn4;
    private javax.swing.JTextArea CreditShow;
    private javax.swing.JTextArea SettingsErrors;
    private javax.swing.JLabel answersDisplay;
    private javax.swing.JButton buyAnswer;
    private javax.swing.JButton buyLegendary;
    private javax.swing.JButton buyLife;
    private javax.swing.JButton buyRare;
    private javax.swing.JButton changeValues;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JLabel goldDisplay;
    private javax.swing.JTextField goldErrorBox;
    private javax.swing.JTextArea instructionPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel legendDisplay;
    private javax.swing.JLabel livesDisplay;
    private javax.swing.JTextField newEmail;
    private javax.swing.JTextField newName;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JTextField newSurname;
    private javax.swing.JLabel rareDisplay;
    private javax.swing.JTextArea showLeaderboard;
    private javax.swing.JLabel username;
    private javax.swing.JLabel username1;
    private javax.swing.JLabel username2;
    private javax.swing.JLabel username4;
    // End of variables declaration//GEN-END:variables
}
/*
battleglory#16#0#0
battleglory#1#0#1
battleglory#4#0#1
battleglory#15#0#1
*/